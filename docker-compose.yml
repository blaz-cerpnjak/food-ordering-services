version: '3.1'

services:

  ### User Management API
  mongo_db_users:
    image: mongo:7.0.6
    volumes:
      - mongo_data_users:/data/mongo
    restart: unless-stopped
    networks:
      - native

  user-management-api:
    container_name: user-management-api
    build:
      context: UserManagementAPI
      dockerfile: Dockerfile
    restart: always
    environment:
        MONGO_DB_URI: mongodb://mongo_db_users:27017/users_db
    expose:
      - 8080
    depends_on:
        - mongo_db_users
    networks:
      - native

  ### Restaurant Management API
  mongo_db_restaurants:
    image: mongo:7.0.6
    volumes:
      - mongo_data_restaurants:/data/mongo
    restart: unless-stopped
    networks:
      - native

  restaurant-management-api:
    container_name: restaurant-management-api
    build:
      context: RestaurantManagementAPI
      dockerfile: ./src/main/docker/Dockerfile.jvm
    restart: always
    environment:
      MONGO_DB_URI: mongodb://mongo_db_restaurants:27017/restaurant_db
    expose:
      - 8080
    depends_on:
      - mongo_db_restaurants
    networks:
      - native

  ### Order Processing API
  mongo_db_orders:
    image: mongo:7.0.6
    volumes:
      - mongo_data_orders:/data/mongo
    restart: unless-stopped
    networks:
      - native

  order-processing-grpc-api:
    container_name: order-processing-grpc-api
    build:
      context: OrderProcessingAPI
      dockerfile: ./src/main/docker/Dockerfile.jvm
    restart: always
    environment:
      MONGO_DB_URI: mongodb://mongo_db_orders:27017/orders_db
      RABBITMQ_HOST: rabbitmq_container
    expose:
      - 8080
      - 9000
    depends_on:
      - mongo_db_orders
    networks:
      - native

  ### API Gateway for Web
  web-api-gateway:
    build:
      context: API_GatewayWeb
      dockerfile: Dockerfile
    restart: always
    environment:
      JWT_SECRET: A9BBD31CB41A4629875353E3A1AA9
      USERS_API: http://user-management-api:8080/api/v1
      RESTAURANTS_API: http://restaurant-management-api:8080
      ORDERS_GRPC_API: order-processing-grpc-api:9000
    expose:
      - 8080
    ports:
    - "8080:8080"
    networks:
    - native

  ### API Gateway for Mobile
  mobile-api-gateway:
    build:
      context: API_GatewayMobile
      dockerfile: Dockerfile
    restart: always
    environment:
      USERS_API: http://user-management-api:8080/api/v1
      RESTAURANTS_API: http://restaurant-management-api:8080
      ORDERS_GRPC_API: order-processing-grpc-api:9000
    expose:
      - 8080
    ports:
    - "8081:8080"
    networks:
    - native

  ### Exception Logging API
  mongo_db_exceptions:
    image: mongo:7.0.6
    volumes:
      - mongo_data_exceptions:/data/mongo
    restart: unless-stopped
    networks:
      - native

  exception-logging-api:
    build:
      context: ExceptionLoggingAPI
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mongo_db_exceptions
    expose:
      - 8080
    ports:
    - "8082:8080"
    networks:
    - native

  # Orders Microfrontend
  orders-web-app:
    depends_on:
        - web-api-gateway
    build:
      context: ./WEB_Microfrontends/orders
      dockerfile: Dockerfile
    environment:
      API_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWZlYjU2YjI2ZTEwYjRjMDkzNzZjNiIsImV4cCI6NjQ0OTQ3MDg3OH0.fOWJzwFCdb6pWJkr8wJUxW1bvZ2PWsrU4qjanFq6tpU
    ports:
      - "3001:3001"
    networks:
      - native

  # Basket Microfrontend
  basket-web-app:
    depends_on:
        - orders-web-app
    build:
      context: ./WEB_Microfrontends/basket
      dockerfile: Dockerfile
    environment:
      API_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWZlYjU2YjI2ZTEwYjRjMDkzNzZjNiIsImV4cCI6NjQ0OTQ3MDg3OH0.fOWJzwFCdb6pWJkr8wJUxW1bvZ2PWsrU4qjanFq6tpU
    ports:
      - "3002:3002"
    networks:
      - native

  # Home Microfrontend
  home-web-app:
    depends_on:
        - basket-web-app
    build:
      context: ./WEB_Microfrontends/home
      dockerfile: Dockerfile
    environment:
      API_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MWZlYjU2YjI2ZTEwYjRjMDkzNzZjNiIsImV4cCI6NjQ0OTQ3MDg3OH0.fOWJzwFCdb6pWJkr8wJUxW1bvZ2PWsrU4qjanFq6tpU
    ports:
      - "3000:3000"
    networks:
      - native

networks:
  native:
    name: native-network
    driver: bridge

volumes:
  mongo_data_users:
  mongo_data_restaurants:
  mongo_data_orders:
  mongo_data_exceptions: